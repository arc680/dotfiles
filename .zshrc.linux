export PATH="$HOME/local/bin:$PATH"

if [ -x $HOME/local/bin/vim ]; then
alias vim="$HOME/local/bin/vim"
fi

if [ -x $HOME/local/bin/tmux ]; then
    alias tmux="LD_LIBRARY_PATH=$HOME/local/lib $HOME/local/bin/tmux"
    if [ $TERM != "tmux" ]; then
        if [ $TERM != "dumb" ]; then
            tmux a
            #screen -e ^z^z
            #screen -d -RR
        fi
    fi
fi

#alias vim='/home/hmaruyam/local/bin/vim'

# 複数の zsh を同時に使う時など history ファイルに上書きせず追加する
setopt append_history
# zsh の開始・終了時刻をヒストリファイルに書き込む
setopt extended_history
# 直前と同じコマンドラインはヒストリに追加しない
setopt hist_ignore_dups
# コマンドラインの先頭がスペースで始まる場合ヒストリに追加しない
setopt hist_ignore_space
# シェルのプロセスごとに履歴を共有
setopt share_history
# history (fc -l) コマンドをヒストリリストから取り除く。
setopt hist_no_store
# ヒストリを呼び出してから実行する間に一旦編集できる状態になる
setopt hist_verify

#agent="$HOME/tmp/ssh-agent-$USER"
#if [ -S "$SSH_AUTH_SOCK" ]; then
#    case $SSH_AUTH_SOCK in
#        /tmp/*/agent.[0-9]*)
#        ln -snf "$SSH_AUTH_SOCK" $agent && export SSH_AUTH_SOCK=$agent
#    esac
#elif [ -S $agent ]; then
#    export SSH_AUTH_SOCK=$agent
#else
#    echo "no ssh-agent"
#fi

case "${TERM}" in
    screen*)
    preexec() {
        printf "\ek$1\e\\"
    }
    precmd() {
        printf "\ek$(basename $(pwd))\e\\"
    }
esac

# git
if [[ $ZSH_VERSION == (<5->|4.<4->|4.3.<10->)* ]]; then
    autoload -Uz vcs_info
    zstyle ':vcs_info:*' formats '(%s)-[%b]'
    zstyle ':vcs_info:*' actionformats '(%s)-[%b|%a]'
    precmd () {
        psvar=()
        LANG=en_US.UTF-8 vcs_info
        [[ -n "$vcs_info_msg_0_" ]] && psvar[1]="$vcs_info_msg_0_"
    }
    RPROMPT="%1(v|%F{green}%1v%f|)"
fi

export PATH="$HOME/.rbenv/bin:$PATH"
eval "$(rbenv init -)"

[ -f ~/.zshrc.linux.local ] && source ~/.zshrc.linux.local